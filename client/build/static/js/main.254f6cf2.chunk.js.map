{"version":3,"sources":["app/login/login.module.css","app/calculator/calculator.js","app/donate/donate.js","app/App.js","app/login/login.js","app/signup/signup.js","app/dashboard/dashboard.js","serviceWorker.js","index.js"],"names":["module","exports","Calculator","props","calculateZakat","zakat","state","amount","setState","toFixed","alert","className","style","backgroundColor","display","flexDirection","justifyContent","alignItems","minHeight","type","placeholder","onChange","e","target","value","onClick","this","history","push","href","color","React","Component","Donate","logindata","App","role","aria-label","class","aria-expanded","aria-hidden","exact","path","component","Login","updateForm","event","nam","name","val","data","login","preventDefault","axios","post","auth","username","password","then","res","console","log","catch","err","response","status","window","lstyles","wavebg","onSubmit","required","autoFocus","Signup","signup","email","textTransform","Dashboard","user","get","Boolean","location","hostname","match","routing","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.254f6cf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wavebg\":\"login_wavebg__Fa3-t\"};","import React from 'react';\n\nexport default class Calculator extends React.Component {\n\n    constructor(props) {\n        super(props)\n        //Global state variables\n        this.state = {\n            amount: '',\n            zakat: ''\n        }\n    }\n\n    //Function for calculating zakat\n    calculateZakat = () => {\n        let zakat;\n        if (this.state.amount === '') {\n            alert(\"Enter an amount\")\n            return;\n        }\n        zakat = (this.state.amount / 100) * 2.5\n        this.setState({ zakat: zakat.toFixed(2) })\n    }\n\n    render() {\n        return (\n\n            <div>\n                <div className=\"columns\">\n                    \n                    <div className=\"column\" style={{ backgroundColor: 'rgb(230, 213, 255)', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', minHeight: '100vh' }}>\n                    <h5>Are you tired of Zakat guides being archaic and outdated? <br />\n                        Are you worried you might not know how to fulfill this pillar of Islam? <br />\n                        Fear not - you've come to the right place! \n                        </h5>\n                        <div className=\"box\">\n                            <input className=\"input is-normal\" type=\"number\" placeholder=\"Enter amount\" /*This functn sets the input value into state variable --> */ onChange={(e) => this.setState({ amount: e.target.value })} />\n                            <br /> <br />\n                            <input className=\"button is-block is-info is-normal is-fullwidth\" type=\"button\" value=\"Calculate Zakat\" /* Function is triggered here --> */ onClick={() => this.calculateZakat()} />\n                            {!this.state.zakat ? \"\" :\n                                <div>\n                                    <br />\n                                    <h3> Calculated Zakat: {this.state.zakat} </h3>\n                                    <br />\n                                    <h4> Do you want to donate? </h4>\n                                    <center><input onClick={() => this.props.history.push('/donate')} className=\"button is-block is-info is-small\" type=\"button\" value=\"Yes\" /></center>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <p className=\"has-text-white\">\n                    <a href=\"/login\" style={{ color: \"white\" }}>Login</a>\n                </p>\n            </div>\n        );\n    }\n}\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n\nclass Donate extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            logindata: {\n                \"user_name\": \"\",\n                \"user_email\": \"\",\n                \"user_password\": \"\",\n                \"cpassword\": \"\"\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"columns\">\n                    <div className=\"column\" style={{ backgroundColor: 'rgb(230, 213, 255)', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', minHeight: '100vh' }}>\n                        <div className=\"box\">\n                            <h4>Find communities near you: </h4> <br />\n                            <input className=\"input is-normal\" type=\"number\" placeholder=\"Enter postal code\" /*This functn sets the input value into state variable --> */ />\n                            <br /> <br />\n                            <input className=\"button is-block is-info is-normal is-fullwidth\" type=\"button\" value=\"Find communities\" /* Function is triggered here --> */ />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Donate;","import React from 'react';\nimport './App.css';\nimport Calculator from './calculator/calculator';\nimport Donate from './donate/donate';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props)\n    //Global state variables\n    this.state = {\n      amount: '',\n      zakat: '',\n    }\n  }\n\n  //Function for calculating zakat\n  calculateZakat = () => {\n    let zakat;\n    if (this.state.amount === '') {\n      alert(\"Enter an amount\")\n      return;\n    }\n    zakat = (this.state.amount / 100) * 2.5\n    this.setState({ zakat: zakat.toFixed(2) })\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n          <div className=\"navbar-brand\">\n  \n            <a class=\"navbar-item\">\n              Home\n            </a>\n\n            <a class=\"navbar-item\" href=\"/zakat\">\n              Zakat calculator\n            </a>\n\n            <a class=\"navbar-item\">\n              Islamic content\n            </a>\n\n            <a class=\"navbar-item\">\n              About us\n            </a>\n\n            <a class=\"navbar-item\" href=\"/login\">\n              Community login\n            </a>\n\n            <a role=\"button\" className=\"navbar-burger\" aria-label=\"menu\" aria-expanded=\"false\">\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n        </nav>\n\n        <Router>\n          <Route exact path=\"/donate\" component={Donate} />\n          <Route exact path=\"/zakat\" component={Calculator} />\n        </Router>\n\n      </div>\n    );\n  }\n}\n\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport lstyles from './login.module.css'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            logindata: {\n                \"user_email\": \"\",\n                \"user_password\": \"\",\n            }\n        }\n    }\n\n    updateForm = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        let data = this.state.logindata;\n        data[nam] = val\n        this.setState({ logindata: data });\n    }\n\n    login = (event) => {\n        event.preventDefault()\n        axios.post(\"/api/login\", {},\n        {\n            auth: {\n                username: this.state.logindata['user_email'],\n                password: this.state.logindata['user_password']\n            }\n        })\n            .then(res => {\n            console.log(res)\n            if (res.data) {\n                this.props.history.push('/dashboard');\n            }\n        })\n        .catch(err => {\n            if (err.response.status === 404) {\n                window.alert(\"Account not found\")\n            }\n            else if (err.response.status === 401) {\n                window.alert(\"Incorrect password\")\n            }\n        });\n    }\n\n    render() {\n        return (\n            <section className={`hero is-fullheight ${lstyles.wavebg}`}>\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"column is-4 is-offset-4\">\n                            <div className=\"box\">\n                                \n                                <h3 className=\"title\"> Umma Login</h3>\n                                {/* <figure className=\"avatar\">\n                                    <h1> Umma Site </h1>\n                                </figure> */}\n                                <br/>\n                                <form onSubmit={this.login}>                 \n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input className=\"input is-normal\" type=\"text\" required onChange={this.updateForm} name=\"user_email\" placeholder=\"Username or email\" autoFocus=\"\"/>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input className=\"input is-normal\" type=\"password\" required onChange={this.updateForm} name=\"user_password\" placeholder=\"Password\"/>\n                                        </div>\n                                    </div>\n\n                                    <button className=\"button is-block is-info is-normal is-fullwidth\"> Login <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\n                                </form>\n                            </div>   \n                            <p className=\"has-text-white\">\n                                <a href=\"/signup\" style={{ color: \"white\" }}>Sign Up</a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport lstyles from '../login/login.module.css';\nimport axios from \"axios\";\n\n\nclass Signup extends Component {\n   \n    constructor(props) {\n        super(props);\n        this.state = {\n            logindata: {\n                \"user_name\": \"\",\n                \"user_email\": \"\",\n                \"user_password\": \"\",\n                \"cpassword\": \"\"\n            }\n        }\n    }\n\n    updateForm = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        let data = this.state.logindata;\n        data[nam] = val\n        this.setState({ logindata: data });\n    }\n\n    signup = (event) => {\n        event.preventDefault()\n        if (this.state.logindata['user_password'] === this.state.logindata['cpassword']) {\n            axios.post(\"/api/signup\", {email: this.state.logindata['user_email']} ,\n            {\n                auth: {\n                    username: this.state.logindata['user_name'],     \n                    password: this.state.logindata['user_password']\n                }\n            })\n            .then(res => {\n                if (res.data) {\n                        this.props.history.push('/');\n                }\n            })\n            .catch(err => {\n                if (err.response.status === 309 && err.response.data.email === this.state.logindata['user_email']) {\n                    window.alert(\"Account already exists\")\n                }\n                else if (err.response.status === 309) {\n                    window.alert(\"Username taken, please try a different name.\")\n                }\n            });\n        }\n        else {\n            window.alert(\"Password doesn't match\")\n        }\n    }\n\n    render() {\n        return (\n            <section className={`hero is-fullheight ${lstyles.wavebg}`}>\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        <div className=\"column is-4 is-offset-4\">\n                            <div className=\"box\">\n                                <h3 className=\"title\">Umma - Sign Up</h3>\n                                <form onSubmit={this.signup}>    \n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input className=\"input is-normal\" style={{textTransform: 'lowercase'}} onChange={this.updateForm} name=\"user_name\" type=\"text\" placeholder=\"Username\" required autoFocus=\"\"/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input className=\"input is-normal\" onChange={this.updateForm} name=\"user_email\" type=\"email\" placeholder=\"Email\" required autoFocus=\"\"/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input className=\"input is-normal\" onChange={this.updateForm} name=\"user_password\" type=\"password\" required placeholder=\"Password\"/>\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <div className=\"control\">\n                                            <input className=\"input is-normal\" onChange={this.updateForm} name=\"cpassword\" type=\"password\" required placeholder=\"Confirm password\"/>\n                                        </div>\n                                    </div>\n                                    <button className=\"button is-block is-info is-normal is-fullwidth\"> Create Account <i className=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\n                                </form>\n                            </div>\n                            <p className=\"has-text-white\">\n                                <a href=\"/login\" style={{ color: \"white\" }}>Login</a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default Signup;","import React from 'react';\nimport axios from 'axios';\n\nexport default class Dashboard extends React.Component {\n\n    constructor(props) {\n        super(props)\n        //Global state variables\n        this.state = {\n            amount: '',\n            zakat: '',\n            user: '',\n        }\n    }\n\n    componentDidMount() {\n        axios.get('/api/isLogged')\n        .then(res => {\n            this.setState({ user: res.data.user})\n          }).catch(err => {\n            console.log(err)\n          })\n    }\n    \n    render() {\n        return (\n            <div>\n                <div className=\"columns\">\n                    <div className=\"column\" style={{ backgroundColor: 'rgb(230, 213, 255)', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', minHeight: '100vh' }}>\n                        <div className=\"box\">\n                            <h2 className=\"title is-4\">Community Dashboard: </h2>\n                            <h4>Community userid: { this.state.user} </h4>\n                            <h4>Community details: </h4>\n                            <input className=\"input is-normal\" type=\"number\" placeholder=\"Enter postal code\" /*This functn sets the input value into state variable --> */ />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.css';\nimport App from './app/App';\nimport Login from './app/login/login';\nimport Signup from './app/signup/signup';\nimport Dashboard from './app/dashboard/dashboard';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n  <Router>\n    <div style={{ minHeight: '100vh' }}>\n      <Route exact path=\"/:any\" component={App} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/signup\" component={Signup} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}